Intro
IMDb ratings give a valuable indicator on how popular episodes of television shows are with viewers. NBC Universal would like to understand what makes certain episodes of The Office more popular than others, so they can produce a special reunion episode with as high an IMDb rating as possible. 

This report uses data on The Office to build and validate a predictive model that captures the underlying relationship between episode features and IMDb rating, and advises on what NBC Universal should include in a reunion episode to maximise audience popularity. 

We achieve this by first performing data exploration to select or remove certain features, we then investigate the effectiveness of different regression models using a training-test split of our data. 

The first model we investigate is a basic linear regression model, this model has an R^2 number of […]. This model provides a baseline from which we will look to improve on later in the report.

The main models we examine use ridge regression and LASSO (least
absolute shrinkage and selection operator). These models have an advantage over linear regression because they contain an additional loss function (L1 for LASSO and L2 for Ridge). These loss functions force the regression coefficients to tend to zero, which in turn lowers the variance. Both these models have significantly lower R^2 [of … and … resp.] than the basic linear model we considered.

Finally, we settle on an ElasticNet model which combines both the L1 and L2 loss functions. We implement this model with […] order polynomial interaction terms and cross validation to minimise overfitting.

We find that the most important features for a highly rated episode of The Office are…

The primary dataset we are using is displayed below. We have a dataset of every episode of the office, critically containing an IMDb rating for each episode amongst other features which are either categorical (writers, characters etc.) or numeric (number of lines, number of directions etc.). We use one-hot encoding to encode the categorical variables. 

We also introduce some additional data [1], from which we develop some useful features. The dataset is the script of the entire show - each row of the dataset contains an episode, series and scene number, a line said in the show ('line_text'), the character ('speaker') who said the line, and whether the line was in a deleted scene or not. From this we can find the number of scenes ('n_scenes') said in each episode, which gives an idea of optimal episode pacing, and the number of lines each main character says in each episode, effectively ranking a character's importance in an episode. 
